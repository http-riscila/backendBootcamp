generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(uuid())
  name             String
  email            String            @unique
  password         String
  bio              String?
  profileImageUrl  String?
  createdAt        DateTime          @default(now())

  communityMember  CommunityMember[]
  createdCommunities Community[]     @relation("CreatedBy")
  createdItems          Item[]            @relation("CreatedBy")
  receivedProposal Proposal[]        @relation("ProposalRecipient")
  sentProposal     Proposal[]        @relation("ProposalSender")
}

model Community {
  id            String    @id @default(uuid())
  name          String
  description   String?
  createdBy     String
  imageUrl      String?
  createdAt     DateTime  @default(now())

  creator       User      @relation("CreatedBy", fields: [createdBy], references: [id])

  members       CommunityMember[]
  items         Item[]
  proposals     Proposal[]
}

model CommunityMember {
  id            String    @id @default(uuid())
  userId        String   
  communityId   String
  isAdmin       Boolean   @default(false)

  community     Community @relation(fields: [communityId], references: [id])
  user          User      @relation(fields: [userId], references: [id])
}

model Item {
  id            String    @id @default(uuid())
  name          String
  description   String?
  category      ItemCategory
  status        ItemStatus
  communityId   String
  createdBy     String
  imageUrl      String?

  community     Community @relation(fields: [communityId], references: [id])
  creator       User      @relation("CreatedBy", fields: [createdBy], references: [id])

  desiredProposals Proposal[] @relation("DesiredItem")
  OfferedProposals Proposal[] @relation("OfferedItem")
}

model Proposal {
  id            String         @id @default(uuid())
  desiredItemId String
  offeredItemId String
  proposalDate  DateTime       @default(now())
  status        ProposalStatus
  senderId      String
  recipientId   String
  communityId   String

  community     Community      @relation(fields: [communityId], references: [id])
  desiredItem   Item           @relation("DesiredItem", fields: [desiredItemId], references: [id])
  offeredItem   Item           @relation("OfferedItem", fields: [offeredItemId], references: [id])
  recipient     User           @relation("ProposalRecipient", fields: [recipientId], references: [id])
  sender        User           @relation("ProposalSender", fields: [senderId], references: [id])
}

enum ProposalStatus {
  PENDING
  ACCEPTED
  REJECTED
}

enum ItemStatus {
  AVAILABLE
  NOT_AVAILABLE
}

enum ItemCategory {
  BOOKS
  ELECTRONICS
  CLOTHING
  TOYS
  HOME_APPLIANCES
  FURNITURE
  SPORTS
  MUSICAL_INSTRUMENTS
  TOOLS
  ART_SUPPLIES
  STATIONERY
  GAMES
  GARDENING
  VEHICLE_ACCESSORIES
  PET_SUPPLIES
  FOOD
  HEALTH
  BEAUTY
  BABY_ITEMS
  COLLECTIBLES
  OTHER
}
